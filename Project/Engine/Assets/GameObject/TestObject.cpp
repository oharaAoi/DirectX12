#include "TestObject.h"
#include "Engine/Utilities/AdjustmentItem.h"

TestObject::TestObject() {
}

TestObject::~TestObject() {
}

void TestObject::Finalize() {
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　
//////////////////////////////////////////////////////////////////////////////////////////////////

void TestObject::Init() {
	BaseGameObject::Init();
	SetObject("Mesh_Primitives_00.gltf");
	SetIsLighting(false);
	//SetAnimater("./Engine/Resources/Gltf/Animation_Node/", "Animation_Node_01.gltf", false, true, false);

	test_.ToJson("testParame");
	test_.FromJson(AdjustmentItem::GetData("Player", "testParame"));
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　
//////////////////////////////////////////////////////////////////////////////////////////////////

void TestObject::Update() {
	
	BaseGameObject::Update();
}
//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　
//////////////////////////////////////////////////////////////////////////////////////////////////
void TestObject::Draw() const {
	
	BaseGameObject::Draw();
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　
//////////////////////////////////////////////////////////////////////////////////////////////////

void TestObject::OnCollisionEnter([[maybe_unused]] MeshCollider& other) {
	if (other.GetTag() == "testObj") {
		isCollision_ = true;
	}
}

void TestObject::OnCollisionStay([[maybe_unused]] MeshCollider& other) {
	
}

void TestObject::OnCollisionExit([[maybe_unused]] MeshCollider& other) {
	if (other.GetTag() == "testObj") {
		isCollision_ = true;
	}
}


#ifdef _DEBUG
void TestObject::Debug_Gui() {
	BaseGameObject::Debug_Gui();
}
#endif