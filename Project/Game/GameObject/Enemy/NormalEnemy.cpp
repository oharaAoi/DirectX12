#include "NormalEnemy.h"
#include "Engine/Editer/Window/EditerWindows.h"

NormalEnemy::NormalEnemy() {}
NormalEnemy::~NormalEnemy() {}
void NormalEnemy::Finalize() {}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　初期化処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void NormalEnemy::Init() {
	BaseGameObject::Init();
	SetObject("player.obj");
	SetColor(Vector4(1,0,0,1));

	SetCollider("normalEnemy", ColliderShape::SPHERE);
	collider_->SetCollisionEnter([this](ICollider& other) { OnCollisionEnter(other); });

	isDead_ = false;
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　更新処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void NormalEnemy::Update() {
	BaseGameObject::Update();
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　描画処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void NormalEnemy::Draw() const {
	BaseGameObject::Draw();
}

//================================================================================================//
//
// 当たり判定
//
//================================================================================================//

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　一番最初
//////////////////////////////////////////////////////////////////////////////////////////////////

void NormalEnemy::OnCollisionEnter([[maybe_unused]] ICollider& other) {
	if (other.GetTag() == "playerAttackCollider") {
		isDead_ = true;
	}
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　連続
//////////////////////////////////////////////////////////////////////////////////////////////////

void NormalEnemy::OnCollisionStay([[maybe_unused]] ICollider& other) {
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　編集処理
//////////////////////////////////////////////////////////////////////////////////////////////////

#ifdef _DEBUG
void NormalEnemy::Debug_Gui() {
}
#endif